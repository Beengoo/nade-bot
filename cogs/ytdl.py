import traceback

import discord.ui
import pytube
from pytube import exceptions, YouTube
from discord import app_commands, Interaction, Embed
from discord.ext.commands import Cog, Bot


class QualitySelectView(discord.ui.View):
    def __init__(self, yt: YouTube):
        super().__init__()
        self.yt = yt

        options = []
        streams = self.yt.streams
        for stream in streams:
            if stream.resolution is None:
                label = f"{stream.abr} - {stream.mime_type}"
            else:
                label = f"{stream.resolution} - {stream.mime_type}"
            value = stream.itag
            option = discord.SelectOption(label=label, value=value)
            options.append(option)

        self.select = discord.ui.Select(
            placeholder="–í–∏–±–µ—Ä—ñ—Ç—å —è–∫—ñ—Å—Ç—å –¥–∂–µ—Ä–µ–ª–∞",
            options=options
        )
        self.add_item(self.select)

    async def interaction_check(self, interaction: discord.Interaction):
        iteg = self.select.values[0]
        await interaction.response.defer(thinking=True, ephemeral=True)
        stream = self.yt.streams.get_by_itag(int(iteg))
        eb = Embed(title="–î–∂–µ—Ä–µ–ª–æ –≥–æ—Ç–æ–≤–µ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è!", description=f"[**–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏**]({stream.url})")
        await interaction.followup.send(content=f"# –ù–∞–∑–≤–∞: {self.yt.title}\n"
                                                f"### –ê–≤—Ç–æ—Ä: {self.yt.author} | *({int(self.yt.views):,.0f} üëÄ)*\n"
                                                f"[**–Ü–Ω—Ñ–æ ‚ÑπÔ∏è**] –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø—É –Ω–µ–º–∞—î –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É —â–µ —Ä–∞–∑.", embed=eb)


class YTDL(Cog):
    def __init__(self, bot: Bot):
        self.bot = bot

    @app_commands.command(
        name="ytdl",
        description="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –∑ YouTube –≤ –¥–æ—Å—Ç—É–ø–Ω—ñ–π —è–∫–æ—Å—Ç—ñ —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—ñ."
    )
    @app_commands.describe(source="–î–∂–µ—Ä–µ–ª–æ (–ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ)", )
    async def onYTDLExec(self, interaction: Interaction, source: str):
        await interaction.response.defer(thinking=True, ephemeral=True)
        try:
            video = pytube.YouTube(source)
            video.bypass_age_gate()
            if video is None:
                await interaction.followup.send("–ù–µ–≤–¥–∞–ª–∞ —Å–ø—Ä–æ–±–∞ –æ–±—Ä–æ–±–∫–∏. –ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É —â–µ —Ä–∞–∑.")
                return
        except exceptions.VideoUnavailable:
            await interaction.followup.send("–ù–µ–¥–æ—Å—Ç—É–ø–Ω–µ –∞–±–æ –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ.")
            return
        except Exception as e:
            await interaction.followup.send(
                f"–í–∏–Ω–∏–∫–ª–∞ –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞.\n```{traceback.print_tb(e.__traceback__)}```")
            return
        view = QualitySelectView(yt=video)
        await interaction.followup.send(content="# –í–µ–±–µ—Ä—ñ—Ç—å —è–∫—ñ—Å—Ç—å –¥–∂–µ—Ä–µ–ª–∞\n"
                                                "[**–£–≤–∞–≥–∞ ‚ö†Ô∏è**] –í—ñ–¥–µ–æ —Ñ–æ—Ä–º–∞—Ç—É `webm` –Ω–µ –º—ñ—Å—Ç—è—Ç—å –∑–≤—É–∫—É\n"
                                                "[**–Ü–Ω—Ñ–æ ‚ÑπÔ∏è **] –ü–µ—Ä–µ–≤–∏–±—ñ—Ä —Ñ–æ—Ä–º–∞—Ç—É –∑–∞–≤–∂–¥–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π –≤ —Ç–æ–º—É —Å–∞–º–æ–º—É –º–µ–Ω—é,"
                                                " –≤–≤–æ–¥–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–æ. *–ü–æ–∂–∞–ª—ñ–π—Ç–µ –Ω–∞—à—ñ —Ä–µ—Å—É—Ä—Å–∏:(*",
                                        view=view)


async def setup(bot: Bot):
    await bot.add_cog(YTDL(bot))
